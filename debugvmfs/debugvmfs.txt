debugvmfs(8)
============

NAME
----
debugvmfs - VMFS file system debugger


SYNOPSIS
--------
*debugvmfs* 'VOLUME'... 'COMMAND' [ 'OPTIONS' ]


DESCRIPTION
-----------
The *debugvmfs* program allows to display various informations about VMFS
file systems, and to access data within the file systems.

The 'VOLUME' to be opened can be either a block device or an image file.
When the VMFS spreads accross several extents, all extents must be given.

Please note that most commands are still likely to change in future versions.

COMMANDS
--------
*cat* 'file' [ ... ]::
Outputs the content of the given files from the VMFS.

*ls* [ *-l* ] 'path'::
Lists files contained at the given location within the VMFS.
+
With *-l*, gives some more information, much like the output from *ls*(1)
when given the *-l* option.

*truncate* 'path' 'length'::
Truncate the file to the specified length. R/W support must be enabled.

*df*::
Outputs information about file system size.

*show_dirent* 'file'::
Outputs directory entity information about the given file from the VMFS.

*show_inode* 'file'::
Outputs inode information about the given file from the VMFS.

*show_file_blocks* 'file'::
Outputs block_ids for the given file's content blocks.

*get_file_block* 'file' 'position'::
Get file block corresponding to position in the specified file.

*check_file_blocks* 'file'::
Check that all blocks used by a file are correctly allocated.

*show_fs*::
Outputs information about the file system.

*show_volume*::
Outputs information about the physical and logical volumes.

*check_vol_bitmaps*::
Checks volume bitmaps consistency.

*show_bitmaps_usage*::
Show statistics about bitmaps usage.

*show_heartbeats*::
Outputs active heartbeats on the file system.

*convert_block_id* 'block_id' [ ... ]::
Outputs information about the given block_id, such as block type, entry and
item numbers.

*read_block* 'block_id' [ ... ]::
Outputs content within the specified block_id in binary

*dump_block* 'block_id' [ ... ]::
Outputs content within the specified block_id in hex

*get_block_status* 'block_id'::
Get status (allocated or free) of the specified block_id.

*alloc_block_fixed* 'block_id'::
Allocate the specified block_id. R/W support must be enabled.

*alloc_block* 'block_type'::
Allocate a block of the specified type. R/W support must be enabled.
+
Allowed block types are: 1 (File Block), 2 (Sub-Block), 3 (Pointer Block) 
and 4 (File Descriptor / Inode).

*free_block* 'block_id'::
Free the specified block_id. R/W support must be enabled.
+
Warning: can cause damage since no heartbeat is used at this time and a block
used by a file can be freed.

*show_bitmap_item* 'block_id'::
Outputs raw content for the bitmap item corresponding to the given block_id.

*show_bitmap_entry* 'block_id'::
Outputs content of the bitmap entry containing the specified block_id.

*show*::
Display value(s) of the given variable. See the *VARIABLES* section for more
details.

*shell*::
Starts an interactive session. All of the above commands can be executed from
within the interactive session.
+
The current working directory can be changed with the *cd* command,
followed by a path.
+
The following output redirections are supported within the shell:
+
- 'cmd' > 'output'
+
Puts the output of 'cmd' in the 'output' file.
+
- 'cmd' >> 'output'
+
Appends the output of 'cmd' to the 'output' file.
+
- 'cmd' | 'external command'
+
Sends the output of 'cmd' to the input of 'external command'.
The 'external command' itself can contain output redirection.
+
Examples:
+
** read_block 0x00000681 | less
** cat /.fdc.sf | hexdump -C
** cat /.fdc.sf | hexdump -C > /tmp/fdc.hex
** cat /.fdc.sf | hexdump -C | less


VARIABLES
---------

Variables in debugvmfs represent structures on the filesystem. The currently
supported top-level variables are the following:

- *fbb*

- *fdc*

- *pbc*

- *sbc*

The *fbb*, *fdc*, *pbc* and *sbc* variables are bitmaps. Running them through
the *show* command will display all the bitmaps header fields. Each of these
fields can also be displayed individually:

- 'bitmap'.*items_per_bitmap_entry*

- 'bitmap'.*bmp_entries_per_area*

- 'bitmap'.*hdr_size*

- 'bitmap'.*data_size*

- 'bitmap'.*area_size*

- 'bitmap'.*area_count*

- 'bitmap'.*total_items*

e.g. to display the data size of the fdc bitmap, type *show fdc.data_size*.


AUTHORS
-------
include::../AUTHORS[]


SEE ALSO
--------
vmfs-fuse(8)
